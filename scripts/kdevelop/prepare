#!/bin/sh
set -e
prefix=$HOME
src_dir=$prefix/src/kde/kdevelop
trunk_dir=$src_dir/trunk
mkdir -p "$trunk_dir"

clone()
{
    echo -n "Cloning into $2... "
    git clone -q "$1" "$2"
    echo "done!"
}

copy()
{
    echo -n "Copying into $2/$3... "
    cp -at "$2" "$1"
    echo "done!"
}

script()
{
    cat > "$1"
    chmod +x "$1"
}

script "$src_dir/cmake.sh" << 'EOF'
#!/bin/bash
src_dir=$(readlink -ne "${@: -1}")
opt_dir=$(readlink -f "$src_dir/../opt")
export KDevPlatform_DIR="$opt_dir"

cmake-ln \
-Wno-dev \
-D CMAKE_INSTALL_PREFIX:PATH="$opt_dir" \
-D CMAKE_BUILD_TYPE:STRING=debugfull \
-D CMAKE_CXX_FLAGS:STRING="-g -O0" \
-D CMAKE_C_FLAGS:STRING="-g -O0" \
"$@"
EOF

script "$src_dir/kdevelop.sh" << 'EOF'
#!/bin/bash
[[ $_ != $0 ]] && me=${BASH_SOURCE[0]} || me=$0
me=$(readlink -f "$me")
src_dir=$(dirname "$me")
optdir=$src_dir/$1/opt
export KDEDIRS=$optdir
export KDEV_DISABLE_SPLASH=1
$optdir/bin/kdevelop
EOF

sources()
{
    dst_dir="$1"
    cmd="$2"
    copy_from="$3"

    for product in kdevelop kdevplatform
    do
        product_dir="$dst_dir/$product"
        [ -d "$product_dir" ] ||
            if [ "$cmd" = "clone" ]; then
                clone git://anongit.kde.org/$product "$product_dir"
            else
                copy "$copy_from/$product" "$dst_dir" "$product"
            fi

        build_dir="$dst_dir/${product}.build"
        mkdir -p "$build_dir"
        cmake_sh="$build_dir/cmake.sh"
        [ -h "$cmake_sh" ] &&
            rm -f "$cmake_sh"
        ln -s "$src_dir/cmake.sh" "$cmake_sh"
    done
}

sources "$trunk_dir" clone

stable_dir=$src_dir/stable
mkdir -p "$stable_dir"

sources "$stable_dir" copy "$trunk_dir"

(
    cd "$stable_dir/kdevelop"
    git checkout -b stable remotes/origin/4.6
    cd "$stable_dir/kdevplatform"
    git checkout -b stable remotes/origin/1.6
)
